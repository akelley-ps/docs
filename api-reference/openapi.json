{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/Assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve customer assets with optional date filtering",
        "parameters": [
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Filter assets modified after this date (optional). Format: ISO 8601 (e.g., 2024-01-01T00:00:00Z)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2024-01-01T00:00:00Z"
          },
          {
            "name": "modifiedBefore",
            "in": "query",
            "description": "Filter assets modified before this date (optional). Format: ISO 8601 (e.g., 2024-12-31T23:59:59Z)",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2024-12-31T23:59:59Z"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of assets",
            "content": {
              "text/plain; version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  }
                }
              },
              "application/json; version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  }
                }
              },
              "text/json; version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Asset"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "401": {
            "description": "Invalid or missing customer ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Create a new asset record in the system (where allowed)",
        "requestBody": {
          "description": "The asset creation request",
          "content": {
            "application/json; version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetRequest"
              }
            },
            "text/json; version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetRequest"
              }
            },
            "application/*+json; version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "application/json; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "text/json; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "201": {
            "description": "Asset created successfully"
          },
          "400": {
            "description": "Invalid asset data"
          },
          "401": {
            "description": "Invalid or missing customer ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/Assets/changes": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Return a delta set of assets modified within a given date range",
        "parameters": [
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Filter assets modified after this date (required). Format: ISO 8601 (e.g., 2024-01-01T00:00:00Z)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "modifiedBefore",
            "in": "query",
            "description": "Filter assets modified before this date (optional). Format: ISO 8601 (e.g., 2024-12-31T23:59:59Z)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the delta set of assets",
            "content": {
              "text/plain; version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetChange"
                  }
                }
              },
              "application/json; version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetChange"
                  }
                }
              },
              "text/json; version=1.0": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetChange"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "401": {
            "description": "Invalid or missing customer ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/Assets/{id}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Retrieve detailed information about a specific asset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The asset ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the detailed asset",
            "content": {
              "text/plain; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "application/json; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "text/json; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "404": {
            "description": "Asset not found"
          },
          "401": {
            "description": "Invalid or missing customer ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Assets"
        ],
        "summary": "Update metadata or status of an existing asset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The asset ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The asset update request",
          "content": {
            "application/json; version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetRequest"
              }
            },
            "text/json; version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetRequest"
              }
            },
            "application/*+json; version=1.0": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Asset updated successfully",
            "content": {
              "text/plain; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "application/json; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              },
              "text/json; version=1.0": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          },
          "400": {
            "description": "Invalid asset data"
          },
          "404": {
            "description": "Asset not found"
          },
          "401": {
            "description": "Invalid or missing customer ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Asset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the asset",
            "format": "int32",
            "example": 1001
          },
          "lastChangedDate": {
            "type": "string",
            "description": "Last modification date of the asset",
            "format": "date-time",
            "example": "2025-07-11T09:10:54Z"
          },
          "contractNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Contract number associated with the asset",
            "example": "CONTRACT-2024-001"
          },
          "psAssetId": {
            "maxLength": 50,
            "type": "string",
            "description": "PS Asset ID for the asset",
            "example": "ASSET-001"
          },
          "serialNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Serial number of the asset",
            "example": "SN-123456789"
          },
          "pmsPerYear": {
            "maximum": 365,
            "minimum": 0,
            "type": "integer",
            "description": "Number of preventive maintenance visits per year",
            "format": "int32",
            "example": 4
          },
          "lastPmDate": {
            "type": "string",
            "description": "Date of the last preventive maintenance visit",
            "format": "date-time",
            "nullable": true,
            "example": "2025-06-16T09:10:54Z"
          },
          "coverageStartDate": {
            "type": "string",
            "description": "Start date of asset coverage",
            "format": "date-time",
            "example": "2024-01-01T00:00:00Z"
          },
          "coverageEndDate": {
            "type": "string",
            "description": "End date of asset coverage",
            "format": "date-time",
            "example": "2025-12-31T23:59:59Z"
          },
          "annualCost": {
            "minimum": 0,
            "type": "number",
            "description": "Annual cost of the asset",
            "format": "decimal",
            "example": 25000
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom field value (string, number, boolean, date, or enum)"
            },
            "description": "Customer-specific custom fields. Use /api/schemas/custom-fields/asset to discover available fields for your customer. This extensible system supports multiple entity types (asset, customer, contract, etc.) with entity-specific validation rules.",
            "example": {
              "note": "Use /api/schemas/custom-fields/asset to see your specific asset fields"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "description": "Documents associated with the asset"
          }
        },
        "additionalProperties": false,
        "description": "Asset entity with core fields and extensible customer-specific custom fields. Core fields (id, contractNumber, serialNumber, etc.) are always present. Custom fields vary by customer and can be discovered using the /api/schemas/custom-fields/asset endpoint. This system supports multiple entity types with entity-specific custom field schemas.",
        "example": {
          "id": 1001,
          "lastChangedDate": "2025-07-11T09:10:54Z",
          "contractNumber": "CONTRACT-2024-001",
          "psAssetId": "ASSET-001",
          "serialNumber": "SN-123456789",
          "pmsPerYear": 4,
          "lastPmDate": "2025-06-16T09:10:54Z",
          "coverageStartDate": "2024-01-01T00:00:00Z",
          "coverageEndDate": "2025-12-31T23:59:59Z",
          "annualCost": 25000,
          "customFields": {
            "note": "Use /api/schemas/custom-fields/asset to discover your specific asset custom fields"
          },
          "documents": [
            {
              "id": "DOC-001",
              "documentType": "service report",
              "fileName": "service-report-001.pdf",
              "createdDate": "2025-07-09T09:10:54Z"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}